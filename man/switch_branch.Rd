% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/switch_branch.R
\name{switch_branch}
\alias{switch_branch}
\title{Perform an switch-like branch in a pipeline}
\usage{
switch_branch(data, case, ..., warn = F)
}
\arguments{
\item{data}{the data being passed through the pipeline.}

\item{case}{an expression to be evaluated in the context of \code{data} to
decide which branch to follow. Must evaluate to numeric or a
character string.}

\item{...}{the list of alternatives. If \code{case} is numeric, then the \code{case}-th alternative
will be chosen (if it exists), if \code{case} is a character, then it will be
compared against the names of one of these alternatives.
If no character matches are found (or the numeric is out of range), then
the \code{data} will be returned untouched.}

\item{warn}{whether or not to warn that no cases were chosen}
}
\description{
Allows the user to perform a switch-like
branch without breaking out of a pipeline.
To maintain the flow of a pipeline, it is recommended
to use \code{fseq} style arguments (i.e. pipelines) for the cases,
however any function can be used. If no cases
match, then the original data is passed unchanged
}
\examples{


tibble::tibble(
  x = rnorm(10),
  y = sample(c("red", "blue", "yellow"),
    10,
    replace = TRUE
  )
) \%>\%
  dplyr::arrange(x) \%>\%
  switch_branch(. \%>\%
    dplyr::slice(1) \%>\%
    dplyr::pull(y),
  red = . \%>\%
    pipe_cat("top was red\n") \%>\%
    dplyr::filter(y == "red"),
  blue = . \%>\%
    pipe_cat("top was blue\n") \%>\%
    dplyr::filter(x < 0)
  ) \%>\%
  dplyr::summarise(m.x = mean(x))

palmerpenguins::penguins \%>\%
  dplyr::mutate(species = factor(species, levels = c("Gentoo", "Adelie", "Chinstrap"))) \%>\%
  dplyr::sample_n(1) \%>\%
  switch_branch(
    . \%>\%
      dplyr::pull(species) \%>\%
      as.numeric(),
    . \%>\%
      pipe_cat("Selected row is Gentoo\n"),
    . \%>\%
      pipe_cat("Selected row is Adelie\n"),
    . \%>\%
      pipe_cat("Selected row is Chinstrap\n")
  )
}
