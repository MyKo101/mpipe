% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fseq_methods.R
\name{fseq_methods}
\alias{fseq_methods}
\alias{+.fseq}
\alias{length.fseq}
\alias{is.fseq}
\alias{is_fseq}
\title{Generic methods for fseq manipulations}
\usage{
\method{+}{fseq}(lhs, rhs)

\method{length}{fseq}(x)

is.fseq(object)

is_fseq(object)
}
\arguments{
\item{lhs}{\code{fseq} to be performed first}

\item{rhs}{\code{fseq} to be performed second}

\item{x}{an \code{fseq} object to extract the length of. Here, \code{length(x)} is
defined as the number of functions in the sequence.}

\item{object}{object to be tested.}
}
\description{
When pipelines are created without an initial term, the
\code{\link{magrittr}} package (where the pipes originate)
creates a specialised type of function called a \code{fseq}.
However, \code{\link{magrittr}} doesn't do much with these
\code{fseq} objects.
}
\examples{
a <- . \%>\% `+`(2) \%>\% `/`(3)
b <- . \%>\% rep(3) \%>\% sum

a + b

(a+b)(2)
(b+a)(2)



length(a)

is.fseq(a)

is_fseq(a)

}
